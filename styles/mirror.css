/**
 The CSS here was adapted from the ProseMirror example.
 The adaptations mainly consisted of removing styling when it interfered with
 markup.css in some way. These changes were commented-out and moved to the end of
 this file. Top-level Prosemirror styling was brought to the top of the file.
 Styling from search.css in prosemirror-search were added and modified.
 */

 .ProseMirror {
    position: relative;
    padding: 4px 8px 4px 8px;
    line-height: 1.2;
    outline: none;
    word-wrap: break-word;
    white-space: pre-wrap;
    white-space: break-spaces;
    font-variant-ligatures: none;
  }
  
  .ProseMirror pre {
    white-space: pre-wrap;
  }
  
  .ProseMirror li {
    position: relative;
  }
  
  .ProseMirror-hideselection *::selection { background: transparent; }
  .ProseMirror-hideselection *::-moz-selection { background: transparent; }
  .ProseMirror-hideselection { caret-color: transparent; }
  
  /* See https://github.com/ProseMirror/prosemirror/issues/1421#issuecomment-1759320191 */
  .ProseMirror [draggable][contenteditable=false] { user-select: text }
  
  .ProseMirror-selectednode {
    outline: 2px solid #8cf;
  }
  
  /* Make sure li selections wrap around markers */
  
  li.ProseMirror-selectednode {
    outline: none;
  }
  
  li.ProseMirror-selectednode:after {
    content: "";
    position: absolute;
    left: -32px;
    right: -2px; top: -2px; bottom: -2px;
    border: 2px solid #8cf;
    pointer-events: none;
  }
  
  /* Protect against generic img rules */
  
  img.ProseMirror-separator {
    display: inline !important;
    border: none !important;
    margin: 0 !important;
  }
  .ProseMirror-textblock-dropdown {
    min-width: 3em;
  }
  
  .ProseMirror-icon svg {
    fill: currentColor;
    height: 1em;
  }
  
  .ProseMirror-icon span {
    vertical-align: text-top;
  }
  .ProseMirror-gapcursor {
    display: none;
    pointer-events: none;
    position: absolute;
  }
  
  .ProseMirror-gapcursor:after {
    content: "";
    display: block;
    position: absolute;
    top: -2px;
    width: 20px;
    border-top: 1px solid black;
    animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
  }
  
  @keyframes ProseMirror-cursor-blink {
    to {
      visibility: hidden;
    }
  }
  
  .ProseMirror-focused .ProseMirror-gapcursor {
    display: block;
  }
  
  .ProseMirror-prompt {
    background: white;
    padding: 5px 10px 5px 15px;
    border: 1px solid silver;
    position: fixed;
    border-radius: 3px;
    z-index: 11;
    box-shadow: -.5px 2px 5px rgba(0, 0, 0, .2);
  }
  
  .ProseMirror-prompt h5 {
    margin: 0;
    font-weight: normal;
    font-size: 100%;
    color: #444;
  }
  
  .ProseMirror-prompt input[type="text"],
  .ProseMirror-prompt textarea {
    background: #eee;
    border: none;
    outline: none;
  }
  
  .ProseMirror-prompt input[type="text"] {
    padding: 0 4px;
  }
  
  .ProseMirror-prompt-close {
    position: absolute;
    left: 2px; top: 1px;
    color: #666;
    border: none; background: transparent; padding: 0;
  }
  
  .ProseMirror-prompt-close:after {
    content: "âœ•";
    font-size: 12px;
  }
  
  .ProseMirror-invalid {
    background: #ffc;
    border: 1px solid #cc7;
    border-radius: 4px;
    padding: 5px 10px;
    position: absolute;
    min-width: 10em;
  }
  
  .ProseMirror-prompt-buttons {
    margin-top: 5px;
    /* display: none; */
  }
  
  /*
   
  #editor, .editor {
    border-radius: 4px;
    border: 2px solid rgba(0, 0, 0, 0.2);
  }
  
  .ProseMirror-example-setup-style hr {
    padding: 2px 10px;
    border: none;
    margin: 1em 0;
  }
  
  .ProseMirror-example-setup-style hr:after {
    content: "";
    display: block;
    height: 1px;
    background-color: silver;
    line-height: 2px;
  }
  
  .ProseMirror ul, .ProseMirror ol {
    padding-left: 30px;
  }
  
  .ProseMirror blockquote {
    padding-left: 1em;
    border-left: 3px solid #eee;
    margin-left: 0; margin-right: 0;
  }
  
  .ProseMirror-example-setup-style img {
    cursor: default;
  }
  
  .ProseMirror p { margin-bottom: 1em }
  */
  